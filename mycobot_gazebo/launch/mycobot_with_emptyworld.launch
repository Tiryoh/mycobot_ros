<?xml version="1.0"?>
<launch>
  <!-- Definitions of arguments that you can pass this launch file, for example paused:=true -->
  <arg name="model" default="$(find mycobot_description)/urdf/mycobot.urdf.xacro" />
  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="world_name" default="$(find mycobot_gazebo)/worlds/empty.world" />
  <arg name="xacro_option" default="" />
  <arg name="robot_namespace" default="" />

  <!-- Initial position in Gazebo -->
  <arg name="x0" default="0" />
  <arg name="y0" default="0" />
  <arg name="z0" default="0.01" />

  <!-- Load the Gazebo simulator with specified world file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
  </include>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model myCobot -param robot_description -x $(arg x0) -y $(arg y0) -z $(arg z0)" />

  <!-- Publish robot's link & joint status -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(arg model)' gazebo_plugin:=true
            robot_namespace:='$(arg robot_namespace)'
            $(arg xacro_option)" />

  <include file="$(find mycobot_control)/launch/mycobot_fake_control.launch" />

</launch>